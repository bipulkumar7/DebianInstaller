<!-- retain these comments for translator revision tracking -->
<!-- original version: 69778 -->

  <sect3 arch="arm">
  <title>Das System mit flash-kernel boot-fähig machen</title>
<para>

Da es für ARM keine plattform-übergreifende
Firmware-Schnittstelle gibt, sind die Schritte, die erforderlich sind,
um das System boot-fähig zu machen, sehr stark vom jeweiligen
Gerät abhängig. &debian; verwendet ein Werkzeug namens
<command>flash-kernel</command>, um dies zu bewerkstelligen.
Flash-kernel enthält eine Datenbank, die die verschiedenen Vorgänge
beschreibt, welche auf den einzelnen Geräten ausgeführt werden müssen,
um diese boot-fähig zu machen. Es erkennt, ob das betreffende Gerät
unterstützt wird; falls ja, führt es die nötigen Schritte aus.

</para><para>

Auf Geräten, die vom internen NOR- oder NAND-Flash-Speicher
booten, schreibt flash-kernel den Kernel und die Initial-Ramdisk
in diesen internen Speicher. Diese Methode ist auf älteren
armel-Geräten sehr verbreitet. Bitte beachten Sie, dass die meisten dieser
Geräte es nicht erlauben, mehrere Kernel und Ramdisks in diesem internen
Speicher abzulegen; das heißt, flash-kernel auf diesen Geräten
auszuführen bedeutet, dass der vorherige Inhalt des Flash-Speichers
überschrieben wird!

</para><para>

Bei ARM-Systemen, die U-Boot als System-Firmware nutzen und Kernel
sowie Initial-Ramdisk von einem externen Speichermedium (wie MMC-/SD-Karte,
USB-Speicher oder IDE-/SATA-Festplatte) booten, generiert flash-kernel
ein passendes Boot-Skript, um das automatische Booten ohne manuelles
Eingreifen durch den Benutzer zu ermöglichen.

</para>
  </sect3>
