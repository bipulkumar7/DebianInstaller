<!-- retain these comments for translator revision tracking -->
<!-- original version: 70113 -->

 <sect1 id="hardware-supported">
 <title>Unterstützte Hardware</title>
<para>

&debian; stellt keine zusätzlichen Anforderungen an die Hardware außer denen
des Linux- bzw. kFreeBSD-Kernels und der GNU-Werkzeuge.
Daher läuft &debian; auf jeder Architektur oder Plattform, auf die der
Linux- bzw. kFreeBSD-Kernel, libc, gcc usw. portiert wurden und für die
eine &debian;-Portierung
existiert. Bitte besuchen Sie die Portierungs-Seite
<ulink url="&url-ports;"></ulink> für weitere Informationen über
Systeme der &arch-title;-Architektur, die mit &debian-gnu; getestet wurden.

</para><para>

Dieser Abschnitt versucht nicht, all die verschiedenen Hardware-Konfigurationen
zu erläutern, die auf der &arch-title;-Architektur unterstützt werden, sondern
bietet vielmehr allgemeine Informationen und Verweise, wo zusätzliche
Informationen zu finden sind.

</para>

  <sect2><title>Unterstützte Architekturen</title>
<para>

&debian; GNU/Linux &release; unterstützt zehn Haupt-Architekturen und einige Variationen
dieser Architekturen, auch als <quote>Flavours</quote> bekannt:

</para><para>

<informaltable>
<tgroup cols="4">
<thead>
<row>
  <entry>Architektur</entry><entry>&debian;-Bezeichnung</entry>
  <entry>Unterarchitektur</entry><entry>Flavour</entry>
</row>
</thead>

<tbody>
<row>
  <entry>Intel x86-basiert</entry>
  <entry>i386</entry>
  <entry></entry>
  <entry></entry>
</row>

<row>
  <entry>AMD64 &amp; Intel 64</entry>
  <entry>amd64</entry>
  <entry></entry>
  <entry></entry>
</row>

<row>
  <entry morerows="2">ARM</entry>
  <entry morerows="2">armel</entry>
  <entry>Marvell Kirkwood</entry>
  <entry>kirkwood</entry>
</row><row>
  <entry>Marvell Orion</entry>
  <entry>orion5x</entry>
</row><row>
  <entry>Versatile</entry>
  <entry>versatile</entry>
</row>

<row>
  <entry morerows="1">ARM mit Hardware-Fließkommaeinheit</entry>
  <entry morerows="1">armhf</entry>
<!---
  <entry>Freescale</entry>
  <entry>mx5</entry>
-->
  <entry>Multiplattform</entry>
  <entry>armmp</entry>
</row><row>
  <entry>Multiplattform für LPAE-fähige Systeme</entry>
  <entry>armmp-lpae</entry>
</row>

<row>
  <entry>64-Bit ARM</entry>
  <entry>arm64</entry>
  <entry></entry>
  <entry></entry>
</row>

<row>
  <entry morerows="3">MIPS (Big Endian)</entry>
  <entry morerows="3">mips</entry>
  <entry>SGI IP22 (Indy/Indigo 2)</entry>
  <entry>r4k-ip22</entry>
</row><row>
  <entry>SGI IP32 (O2)</entry>
  <entry>r5k-ip32</entry>
</row><row>
  <entry>MIPS Malta (32 Bit)</entry>
  <entry>4kc-malta</entry>
</row><row>
  <entry>MIPS Malta (64 Bit)</entry>
  <entry>5kc-malta</entry>
</row>

<row>
  <entry morerows="1">MIPS (Little Endian)</entry>
  <entry morerows="1">mipsel</entry>
  <entry>MIPS Malta (32 Bit)</entry>
  <entry>4kc-malta</entry>
</row><row>
  <entry>MIPS Malta (64 Bit)</entry>
  <entry>5kc-malta</entry>
</row>

<row>
  <entry morerows="1">IBM/Motorola PowerPC</entry>
  <entry morerows="1">powerpc</entry>
  <entry>PowerMac</entry>
  <entry>pmac</entry>
</row><row>
  <entry>PReP</entry>
  <entry>prep</entry>
</row>

<row>
  <entry>Power Systems</entry>
  <entry>ppc64el</entry>
  <entry>IBM POWER8 oder neuer</entry>
  <entry></entry>
</row>

<!--
<row>
  <entry morerows="1">Sun SPARC</entry>
  <entry morerows="1">sparc</entry>
  <entry>sun4u</entry>
  <entry morerows="1">sparc64</entry>
</row><row>
  <entry>sun4v</entry>
</row>
-->

<!--
<row>
  <entry>IBM S/390</entry>
  <entry>s390</entry>
  <entry>IPL von VM-Reader und DASD</entry>
  <entry>generic</entry>
</row>
-->

<row>
  <entry>64-Bit IBM S/390</entry>
  <entry>s390x</entry>
  <entry>IPL von VM-Reader und DASD</entry>
  <entry>generic</entry>
</row>

</tbody></tgroup></informaltable>

</para><para>

Dieses Dokument umfasst die Installation für die
<emphasis>&arch-title;</emphasis>-Architektur bei Verwendung des
<emphasis>&arch-kernel;</emphasis>-Kernels.

Wenn Sie Informationen über eine
der anderen von &debian; unterstützten Architekturen suchen, besuchen Sie
<ulink url="http://www.debian.org/ports/">Debians Portierungs-Seiten</ulink>.

</para>
<para condition="new-arch">

Dies ist die erste offizielle Veröffentlichung von &debian-gnu; für die
&arch-title;-Architektur. Wir finden, dass sie sich ausreichend bewährt hat, um
veröffentlicht zu werden. Nachdem sie jedoch noch nicht eine so starke
Verbreitung (und daher auch nicht so viel Erprobung bei den Benutzern)
gefunden hat, könnten Sie hin und wieder auf Fehler stoßen. Verwenden Sie
unsere
<ulink url="&url-bts;">Fehlerdatenbank (Bug Tracking System, BTS)</ulink>, um
Probleme zu melden; geben Sie jedoch auf jeden Fall an, dass der
Fehler auf &arch-title; bei Verwendung des
<emphasis>&arch-kernel;</emphasis>-Kernels
vorgekommen ist. Es könnte auch notwendig sein, die
<ulink url="&url-list-subscribe;">Debian &arch-listname;-Mailingliste</ulink>
zu kontaktieren.

</para>
  </sect2>

<!-- supported cpu docs -->
&supported-amd64.xml;
&supported-arm.xml;
&supported-i386.xml;
&supported-mips.xml;
&supported-mipsel.xml;
&supported-powerpc.xml;
&supported-s390.xml;
&supported-sparc.xml;

  <sect2 arch="x86" id="laptops"><title>Laptops</title>
<para>

Von der technischen Seite her betrachtet sind Laptops normale PCs, daher gelten
alle Informationen zu PC-Systemen auch für Laptops. Installationen auf Laptops
laufen heutzutage normalerweise ohne Probleme, inklusive Dingen wie dem
automatischen Suspend (Einfrieren des Systems) beim Schließen des Deckels
oder Laptop-spezifischen Knöpfen wie denen zum Deaktivieren des
Funkmoduls (<quote>Flugzeugmodus</quote>). Trotzdem verwenden die
Hardware-Hersteller manchmal für einige Laptop-spezifische Funktionen spezielle
oder proprietäre Hardware, die unter Umständen nicht unterstützt wird.
Um zu erfahren, ob ein bestimmter
Laptop gut mit GNU/Linux funktioniert, können Sie zum Beispiel die
<ulink url="&url-x86-laptop;">Linux-on-Laptops-Seiten</ulink> besuchen.

</para>
   </sect2>

  <sect2 condition="defaults-smp">
  <title>Mehrprozessor-Systeme</title>
<para>

Mehrprozessor-Unterstützung &ndash; auch <quote>symmetrisches
Multiprocessing (SMP)</quote> genannt &ndash; ist für diese Architektur
verfügbar. Mehrere Prozessoren in einem Computer zu haben war ursprünglich
nur auf High-End-Servern ein Thema, ist aber in den letzten Jahren mit der
Einführung sogenannter <quote>Multi-Core</quote>-Prozessoren fast überall
gängig geworden. Diese enthalten
zwei oder mehr Prozessoreinheiten, sogenannte <quote>Cores</quote>
(Kerne), in einem physikalischen Chip.

</para><para>

Das Standard-Kernel-Image in &release; wurde mit SMP-Unterstützung
kompiliert. Es ist auch auf Nicht-SMP-Systemen ohne Probleme nutzbar.

</para>
  </sect2>

  <sect2 condition="smp-alternatives">
  <title>Mehrprozessor-Systeme</title>
<para>

Mehrprozessor-Unterstützung &ndash; auch <quote>symmetrisches
Multiprocessing (SMP)</quote> genannt &ndash; ist für diese Architektur
verfügbar. Das Standard-Kernel-Image in &release; wurde mit
<firstterm>SMP-alternatives</firstterm>-Unterstützung kompiliert.
Das bedeutet, dass der Kernel die Zahl der Prozessoren (oder
Prozessor-Kerne) erkennt und bei Ein-Prozessor-Systemen automatisch die
SMP-Unterstützung deaktiviert.

</para><para>

Mehrere Prozessoren in einem Computer zu haben war ursprünglich
nur auf High-End-Servern ein Thema, ist aber in den letzten Jahren mit der
Einführung sogenannter <quote>Multi-Core</quote>-Prozessoren fast überall
gängig geworden. Diese enthalten
zwei oder mehr Prozessoreinheiten, sogenannte <quote>Cores</quote>
(Kerne), in einem physikalischen Chip.

</para>
  </sect2>

  <sect2 condition="supports-smp">
  <title>Mehrprozessor-Systeme</title>
<para>

Mehrprozessor-Unterstützung &ndash; auch <quote>symmetrisches
Multiprocessing (SMP)</quote> genannt &ndash; ist für diese Architektur
verfügbar. Das Standard-Kernel-Image in &release; unterstützt jedoch kein SMP.
Das sollte eine Installation jedoch nicht verhindern, da der
Standard-Nicht-SMP-Kernel auch auf SMP-Systemen starten müsste;
der Kernel wird dann lediglich die erste CPU verwenden.

</para><para>

Um die Vorteile von mehreren Prozessoren zu nutzen, müssen Sie den
Standard-&debian;-Kernel ersetzen. <phrase arch="linux-any">Eine Erörterung
dazu finden Sie im
<xref linkend="kernel-baking"/>. Zum momentanen Zeitpunkt
(in Kernel-Version &kernelversion;) ist der Weg zum Aktivieren von SMP
das Auswählen von <quote>&smp-config-option;</quote> im
<quote>&smp-config-section;</quote>-Abschnitt der Kernel-Konfiguration.</phrase>

</para>
  </sect2>


  <sect2 condition="supports-smp-sometimes">
  <title>Mehrprozessor-Systeme</title>
<para>

Mehrprozessor-Unterstützung &ndash; auch <quote>symmetrisches
Multiprocessing (SMP)</quote> genannt &ndash; ist für diese Architektur
verfügbar und wird auch von einem der vorkompilierten Kernel unterstützt. Es
hängt jedoch von Ihrem Installationsmedium ab, ob dieser SMP-fähige Kernel
standardmäßig installiert wird. Dies sollte eine Installation aber nicht
verhindern, da der Standard-Nicht-SMP-Kernel auch auf SMP-Systemen starten
müsste; der Kernel wird dann lediglich die erste CPU verwenden.

</para><para>

Um die Vorteile von mehreren Prozessoren zu nutzen, sollten Sie überprüfen,
ob ein Kernelpaket, das SMP unterstützt, installiert ist und, falls nicht,
ein passendes Paket auswählen und installieren.

</para><para>

Sie können auch einen eigenen benutzerspezifischen Kernel mit
SMP-Unterstützung bauen. <phrase arch="linux-any">Eine Erörterung
dazu finden Sie im
<xref linkend="kernel-baking"/>. Zum momentanen Zeitpunkt (in Kernel-Version
&kernelversion;) ist der Weg zum Aktivieren von SMP das Auswählen von
<quote>&smp-config-option;</quote> im
<quote>&smp-config-section;</quote>-Abschnitt der Kernel-Konfiguration.</phrase>

</para>
  </sect2>

  <sect2 id="gfx" arch="not-s390"><title>Unterstützung für Grafik-Hardware</title>

<para>  

Die Unterstützung für Grafikkarten in &debian; wird bestimmt von der
zugrundeliegenden Unterstützung im X.Org-X11-System und dem Kernel.
Basis-Grafikfunktionalitäten über Framebuffer wird durch den Kernel
bereitgestellt, während Desktop-Umgebungen X11 verwenden.
Ob erweiterte Funktionen der Grafikkarte, wie 3D-Hardware-Beschleunigung
oder hardware-beschleunigte Anzeige, verfügbar sind, hängt von der
letztendig im System verwendeten Grafik-Hardware ab und manchmal ist
die Installation von zusätzlichen <quote>Firmware</quote>-Images nötig
(siehe <xref linkend="hardware-firmware"/>).

</para>

<para arch="x86">

Auf modernen PCs funktioniert die grafische Anzeige normalerweise
direkt ohne weiteres Eingreifen. In einigen wenigen Fällen
gab es Berichte über Hardware, bei der auch für die grundsätzliche
Basisfunktionalität der Grafikkarte die Installation von zusätzlicher
Firmware erforderlich war; dies sind aber seltene Ausnahmen.
Bei vielen Karten funktioniert auch die 3D-Beschleunigung, ohne dass
dazu speziell etwas unternommen werden muss. Allerdings gibt es immer
noch Hardware, die Firmware-Dateien benötigt, um korrekt zu arbeiten.

</para>

<para arch="arm">

Nahezu alle ARM-Maschinen haben die Grafik-Hardware fest eingebaut,
und nicht als Erweiterungskarte. Es gibt Systeme mit
Erweiterungssteckplätzen, die auch Grafikkarten aufnehmen können, aber
diese sind eher Raritäten. Hardware, die entwickelt wurde, um komplett
ohne eine lokale Grafikanzeige zu arbeiten, ist hier eher die Regel.
Während eine Basis-Grafikfunktionalität über Framebuffer (durch den
Kernel bereitgestellt) auf allen Geräten, die Grafik-Hardware haben,
funktionieren sollte, benötigt 3D-Grafik ausnahmslos Binärtreiber.
Die Situation ändert sich hier sehr schnell, aber zur Zeit der
Freigabe von &releasename-cap; sind freie Treiber für nouveau (Nvidia
Tegra-K1-SoC) und freedreno (Qualcomm Snapdragon-SoCs) in der
Veröffentlichung enthalten. Andere Hardware benötigt nicht-freie
Treiber von Drittanbietern.

</para><para>

Details über unterstützte Grafikkarten und Zeigegeräte finden Sie
unter <ulink url="&url-xorg;"></ulink>. &debian-gnu; &release; enthält X.Org in
Version &x11ver;.

</para><para arch="mips">

<!-- FIXME: mention explicit graphics chips and not system names -->
Das X.Org X-Window-System wird nur auf dem SGI Indy und dem O2 unterstützt.

</para><para arch="sparc">

Die meiste Grafik-Hardware, die man auf Sparc-basierten Maschinen findet, wird
unterstützt. X.Org-Grafiktreiber sind verfügbar für sunbw2, suncg14, suncg3,
suncg6, sunleo- und suntcx-Framebuffer, Creator3D- und Elite3D-Karten
(sunffb-Treiber), PGX24/PGX64 ATI-basierte Grafikkarten (ati-Treiber) sowie für
PermediaII-basierte Karten (glint-Treiber). Um eine Elite3D-Karte mit X.Org
verwenden zu können, müssen Sie zusätzlich das Paket
<classname>afbinit</classname> installieren; lesen Sie auch die Dokumentation,
die dort enthalten ist, für Informationen, wie Sie die Karte aktivieren.

</para><para arch="sparc">

Es ist für eine Sparc-Maschine nicht unüblich, in der Standardbestückung zwei
Grafikkaren installiert zu haben. In einem solchen Fall besteht die Möglichkeit,
dass der Linux-Kernel seine Ausgabe nicht auf die Karte ausgibt, die eingangs
von der Firmware genutzt wurde, sondern auf die andere. Weil in einem solchen
Fall auf der grafischen Konsole nichts angezeigt wird, könnte man
fälschlicherweise davon ausgehen, der Rechner würde hängen (gewöhnlich ist die
letzte Meldung, die Sie auf der Konsole sehen <quote>Booting Linux ...</quote>).
Eine mögliche Lösung ist, eine der Karten physikalisch aus dem System zu
entfernen; eine andere Möglichkeit wäre, eine der Karten mittels eines
Kernel-Boot-Parameters zu deaktivieren. Alternativ können Sie die serielle
Konsole zur Installation verwenden, wenn die grafische Bildschirmanzeige eh
nicht nötig oder unerwünscht ist. Auf einigen Systemen kann die Nutzung der
seriellen Konsole ganz einfach aktiviert werden, indem man den Stecker der
Tastatur vor dem Systemstart herauszieht.

</para>
  </sect2>

&network-cards.xml;
&accessibility-hardware.xml;
&supported-peripherals.xml;

 </sect1>

 <sect1 arch="not-s390" id="hardware-firmware">
 <title>Hardware, die Firmware erfordert</title>
<para>

Neben der Verfügbarkeit eines Gerätetreiber erfordern einige Geräte
zusätzlich sogenannte <firstterm>Firmware</firstterm> (oder
<firstterm>Microcode</firstterm>), die in das Gerät geladen werden muss,
damit es funktioniert. Dies ist überwiegend bei Netzwerkkarten (speziell
für Drahtlos-Netzwerke/Wireless-LAN) üblich, aber es gibt zum Beispiel
auch USB-Geräte und sogar einige Festplatten-Controller, die Firmware
erfordern.
Bei vielen Grafikkarten ist die grundsätzliche Basisfunktionalität ohne
zusätzliche Firmware verfügbar, die Nutzung von erweiterter Funktionen erfordert
jedoch, dass eine bestimmte Firmware-Datei in dem System installiert wird.  

</para><para>

Auf vielen älteren Geräten, die Firmware zum Betrieb erforderten, war die
Firmware durch den Hersteller fest in einem EEPROM-/Flash-Chip auf der Karte
selbst abgelegt. Heutzutage haben neue Geräte die Firmware nicht mehr auf diese
Weise integriert, so dass die Firmware-Datei von dem Betriebssystem des Rechners
bei jedem Systemstart in das Gerät geladen werden muss.

</para><para>

In den meisten Fällen ist Firmware im Sinne der Kriterien des
&debian-gnu;-Projekts nicht frei und kann deshalb nicht in der
Hauptdistribution oder im Installationssystem integriert werden. Falls der
Gerätetreiber selbst in der Distribution enthalten ist und falls &debian-gnu;
die Firmware legal weiterverteilen darf, ist sie aber oft als separates Paket
im Non-Free-Bereich des Archivs verfügbar.

</para><para>

Dies bedeutet aber nicht, dass solche Hardware nicht während der
Installation verwendet werden kann. Seit &debian-gnu; 5.0 unterstützt der
&d-i; die Möglichkeit, Firmware-Dateien oder -Pakete von einem transportablen
Medium (wie einem USB-Stick) nachzuladen.
<xref linkend="loading-firmware"/> enthält detaillierte Informationen, wie
Sie die Firmware während der Installation laden können.

</para><para>

Wenn der &d-i; eine Firmware-Datei anfordert und Sie diese Datei nicht haben
oder keine nicht-freie Firmware auf Ihrem System installieren möchten, können
Sie versuchen, ohne das Laden der Firmware fortzufahren. Es gibt mehrere Fälle,
wo der Treiber zusätzliche Firmware anfordert, da diese unter bestimmten
Umständen nötig sein könnte, das Gerät aber auf den meisten Systemen auch ohne
diese Firmware funktioniert (dies passiert z.B. mit bestimmten Netzwerkkarten,
die den tg3-Treiber verwenden).

</para>
 </sect1>
