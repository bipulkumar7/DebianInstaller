<!-- retain these comments for translator revision tracking -->
<!-- original version: 69885 -->

  <sect2 arch="armhf;armel" id="boot-image-formats">
  <!-- <title>Boot image formats</title> -->
  <title>Formati delle immagini d'avvio</title>
<para>

<!--
On ARM-based systems in most cases one of two formats for boot images
is used: a) standard Linux zImage-format kernels
(<quote>vmlinuz</quote>) in conjunction with standard Linux initial
ramdisks (<quote>initrd.gz</quote>) or b) uImage-format kernels
(<quote>uImage</quote>) in conjunction with corresponding initial
ramdisks (<quote>uInitrd</quote>).
-->

Sulla maggior parte dei sistemi ARM è utilizzato uno tra questi due
formati per le immagini di avvio: a) kernel Linux standard
(<quote>vmlinuz</quote>) insieme ai tradizionali ramdisk iniziali di
Linux (<quote>initrd.gz</quote>) oppure b) kernel in formato uImage
insieme al suo ramdisk iniziale (<quote>uInitrd</quote>).

</para><para>

<!--
uImage/uInitrd are image formats designed for the U-Boot firmware that
is used on many ARM-based systems (mostly 32-bit ones). Older U-Boot versions can only
boot files in uImage/uInitrd format, so these are often used on
older armel systems. Newer U-Boot versions can - besides booting
uImages/uInitrds - also boot standard Linux kernels and ramdisk images,
but the command syntax to do that is slightly different from that
for booting uImages.
-->

uImage/uInitrd sono formati pensati per il firmware U-Boot, presente
su molti sistemi ARM (principalmente quelli a 32-bit). Le versioni
di U-Boot più vecchie possono avviare
solo file nel formato uImage/uInitrd, quindi spesso sono usate sui
sistemi armel più vecchi. Le versioni di U-Boot più recenti sono in
grado di avviare ovviamente le immagini uImages/uInitrds ma riescono ad
avviare anche i kernel e i ramdisk in formato Linux, la sintassi del
comando per avviare le immagini in formato Linux è leggermente diversa
da quella del comando per avviare le immagini uImage.

</para><para>

<!--
For systems using a multiplatform kernel, besides kernel and initial
ramdisk a so-called device-tree file (or device-tree blob,
<quote>dtb</quote>) is needed. It is specific to each supported system
and contains a description of the particular hardware. The dtb
should be supplied on the device by the firmware, but in practice a
newer one often needs to be loaded.
-->

Per i sistemi che usano un kernel multipiattaforma, oltre al kernel e
al ramdisk, è necessario anche un cosiddetto file con l'albero dei
dispositivi (device-tree oppure device-tree blob, <quote>dtb</quote>).
Tale file è specifico per ciscun sistema e contiene la descrizione
dell'hardware. Normalmente il dtb è fornito dal firmware del dispositivo
ma, in pratica, è necessario caricarne uno più recente.

</para>
  </sect2>

  <sect2 arch="armhf" id="armhf-console-setup">
  <!-- <title>Console configuration</title> -->
  <title>Configurazione della console</title>
<para>

<!--
The netboot tarball (<xref
linkend="boot-armhf-netboot.tar.gz"/>), and the installer
SD-card images (<xref linkend="boot-installer-sd-image"/>) use
the (platform-specific) default console that is defined by
U-Boot in the <quote>console</quote> variable.  In most cases
that is a serial console, so on those platforms you by default
need a serial console cable to use the installer.
-->

Il tarball per l'avvio da rete (<xref
linkend="boot-armhf-netboot.tar.gz"/>) e le immagini delle
schede SD con l'installatore (<xref linkend="boot-installer-sd-image"/>)
utilizzano la console predefinita (specifica di ciascuna piattaforma)
definita nella variabile <quote>console</quote> di U-Boot. Nella maggior
parte dei casi è una console seriale e quindi su tali piattaforme è 
necessario un cavo per console seriale per utilizzare l'installatore.

</para><para>

<!--
On platforms which also support a video console, you can modify the
U-Boot <quote>console</quote> variable accordingly if you would like
the installer to start on the video console.
-->

Sulle piattaforme che supportano una console video è possibile
modificare la variabile <quote>console</quote> di U-Boot in modo da
avviare l'installatore in una console video.

</para>
  </sect2>

  <sect2 arch="arm64" id="arm64-console-setup">
  <!-- <title>Console configuration</title> -->
  <title>Configurazione della console</title>
<para>

<!--
The graphical installer is not enabled on the arm64 &d-i; images
for jessie so the serial console is used. The console device
should be detected automatically from the firmware, but if it is
not then after you boot linux from the GRUB menu you will see a
<quote>Booting Linux</quote> message then nothing more.
-->

L'installatore grafico non è disponibile nelle immagini arm64 del &d-i;
per jessie e quindi occorre usare una console seriale. Il device della
console dovrebbe essere rilevato automaticamente dal firmware ma se non
lo fosse dopo l'avvio di linux dal menu di GRUB appare il messaggio
<quote>Booting Linux</quote> e nulla più.

</para><para>

<!--
If you hit this issue you will need to set a specific console
config on the kernel command line. Hit <userinput>e</userinput>
for <quote>Edit Kernel command-line</quote> at the GRUB menu, and change
<informalexample><screen>- - - quiet</screen></informalexample> to
<informalexample><screen>console=&lt;device&gt;,&lt;speed&gt;</screen></informalexample>
e.g. <informalexample><screen>console=ttyAMA0,115200n8</screen></informalexample>.
When finished hit <keycombo><keycap>Control</keycap>
<keycap>x</keycap></keycombo> to continue booting with new
setting.
-->

Nel caso si verifichi questo problema occorre passare la configurazione
della console nella riga di comando del kernel. Nel menu di GRUB premere
<userinput>e</userinput> per <quote>Edit Kernel command-line</quote> e
modificare <informalexample><screen>--- quiet</screen></informalexample> in
<informalexample><screen>console=&lt;device&gt;,&lt;speed&gt;</screen></informalexample>
per esempio <informalexample><screen>console=ttyAMA0,115200n8</screen></informalexample>.
Fatta la modifica premere <keycombo><keycap>Control</keycap>
<keycap>x</keycap></keycombo> per continuare l'avvio con la nuova
configurazione.

</para>
  </sect2>

  <sect2 arch="arm64" id="juno-installation">
  <!-- <title>Juno Installation</title> -->
  <title>Installazione su Juno</title>
<para>

<!--
Juno has UEFI so the install is straightforward.  The most
practical method is installing from USB stick. You need up to
date firmware for USB-booting to work. Builds from <ulink
url="&url-juno-firmware;">&url-juno-firmware;</ulink> after March
2015 tested OK. Consult Juno documentation on firmware updating.
-->

Juno dispone di UEFI quindi l'installazione è diretta. Il modo più
pratico è l'installare da una chiavetta USB. Per eseguire l'avvio da
dispositivo USB è necessario aggiornare il firmware. I firmware in
<ulink url="&url-juno-firmware;">&url-juno-firmware;</ulink> creati
dopo Marzo 2015 sono stati verificati e funzionano. Consultare la
documentazione di Juno su come aggiornare il firmware.

</para><para>

<!--
Prepare a standard arm64 CD image on a USB stick. Insert it in
one of the USB ports on the back. Plug a serial cable into the
upper 9-pin serial port on the back. If you need networking
(netboot image) plug the ethernet cable into the socket on the
front of the machine.
-->
	  
Preparare un'immagine del CD arm64 su una chiavetta USB. Inserirla in
una delle porte USB sul retro e collegare un cavo seriale nella porta
a 9 pin in alto. Se è necessario accedere alla rete (con l'immagine
netboot) inserire il cavo Ethernet nel connettore sul davanti della
macchina.

</para><para>

<!--
Run a serial console at 115200, 8bit no parity, and boot the
Juno. It should boot from the USB stick to a GRUB menu.
The console config is not correctly detected on Juno so just hitting
return will show no kernel output. Set the console to  
-->

Attivare la console seriale a 115200, 8 bit, senza parità e poi avviare
Juno. Dovrebbe avviarsi dalla chiavetta USB e mostrare il menu di GRUB.
La configurazione della console non è rilevata correttamente quindi
premere Invio per vedere l'output del kernel. Per impostare la console

<informalexample><screen>
console=ttyAMA0,115200n8
</screen></informalexample>

<!--
as described in (<xref linkend="arm64-console-setup"/>). <keycombo><keycap>Control</keycap>
<keycap>x</keycap></keycombo> to boot should show you the &d-i; screens,
and allow you to proceed with a standard installation.
-->

come descritto in <xref linkend="arm64-console-setup"/>. Per avviare il
&d-i; premere <keycombo><keycap>Control</keycap><keycap>x</keycap></keycombo>
e continuare con l'installazione standard.

</para>
  </sect2>

  <sect2 arch="arm64" id="apm-installation">
  <!-- <title>Applied Micro Mustang Installation</title> -->
  <title>Installazione su Applied Micro Mustang</title>
<para>

<!--
UEFI is available for this machine but it is normally shipped
with U-Boot so you will need to either install UEFI firmware
first then use standard boot/install methods, or use U-Boot boot
methods. Also USB is not supported in the jessie kernel so
installing from a USB stick does not work. You must use a serial
console to control the installation because the graphical
installer is not enabled on the arm64 architecture.
-->

Per queste macchine è possibile usare UEFI e normalmente sono
equipaggiate con U-Boot quindi sarà possibile installare prima
il firmware UEFI e poi usare i metodi d'avvio e d'installazione
standard, oppure usare uno dei metodi d'avvio con U-Boot. Inoltre
il supporto per USB non è presente nel kernel di jessie e quindi
l'installazione da chiavetta USB non funziona. È necessario usare una
console seriale per controllare l'installazione perché l'installatore
grafico non è disponibile sull'architettura arm64.

</para><para>

<!--
The recommended install method is to copy the &d-i; kernel and
initrd onto the hard drive, using the openembedded system
supplied with the machine, then boot from that to run the
installer. Alternatively use TFTP to get the kernel/dtb/initrd
copied over and booted (<xref linkend="boot-tftp-uboot"/>). After
installation, manual changes to boot from the installed image
are needed.
-->

Il metodo d'installazione raccomandato è copiare il kernel e l'initrd
del &d-i; sul disco fisso utilizzando il sistema openembedded
fornito insieme alla macchina poi avviare ed eseguire l'installatore.
In alternativa usare TFTP per copiare e avviare kernel/dtb/initrd
(<xref linkend="boot-tftp-uboot"/>). Dopo l'installazione occorre
modificare manualmente la configurazione per l'avvio.

</para><para>

<!--
Run a serial console at 115200, 8bit no parity, and boot the
machine. Reboot the machine and when you see <quote>Hit any key to
stop autoboot:</quote> hit a key to get a Mustang# prompt. Then use
U-Boot commands to load and boot the kernel, dtb and initrd.
-->

Attivare la console seriale a 115200, 8 bit, senza parità e poi avviare
la macchina. Riavviare la macchina e quando appare <quote>Hit any key to
stop autoboot:</quote> premere un tasto qualsiare per avere il prompt
Mustang#. Poi usare i comandi U-Boot per caricare e avviare kernel, dtb
e initrd.

</para>
  </sect2>

  <sect2 arch="arm" id="boot-tftp">
  <!-- <title>Booting by TFTP</title> -->
  <title>Avvio con TFTP</title>

&boot-installer-intro-net.xml;

   <sect3 arch="arm" id="boot-tftp-uboot">
   <!-- <title>TFTP-booting in U-Boot</title> -->
   <title>Avvio da TFTP con U-Boot</title>
<para>

<!--
Network booting on systems using the U-Boot firmware consists of
three steps: a) configuring the network, b) loading the images
(kernel/initial ramdisk/dtb) into memory and c) actually executing
the previosly loaded code.
-->

L'avvio da rete per i sistemi che usano il firmware U-Boot consiste di
tre passi: a) configurazione della rete b) caricamento delle immagini
(kernel, ramdisk e dtb) in memoria c) l'esecuzione del codice appena
caricato.

</para><para>

<!--
First you have to configure the network, either automatically via
DHCP by running
-->

Il primo passo è configurare la rete, automaticamente tramite DHCP con

<informalexample><screen>
setenv autoload no
dhcp
</screen></informalexample>

<!--
or manually by setting several environment variables
-->

oppure manualmente impostando alcune variabili d'ambiente

<informalexample><screen>
setenv ipaddr <!-- &lt;ip address of the client&gt; -->&lt;indirizzo ip del client&gt;
setenv netmask <!-- &lt;netmask&gt; -->&lt;maschera di rete&gt;
setenv serverip <!-- &lt;ip address of the tftp server&gt; -->&lt;indirizzo ip del server tftp&gt;
setenv dnsip <!-- &lt;ip address of the nameserver&gt; -->&lt;indirizzo ip del nameserver&gt;
setenv gatewayip <!-- &lt;ip address of the default gateway&gt; -->&lt;indirizzo ip del gateway predefinito&gt;
</screen></informalexample>

<!--
If you prefer, you can make these settings permanent by running
-->

È possibile salvare in modo permanente queste impostazioni eseguendo

<informalexample><screen>
saveenv
</screen></informalexample>

</para><para>

<!--
Afterwards you need to load the images (kernel/initial
ramdisk/dtb) into memory. This is done with the tftpboot command,
which has to be provided with the address at which the image
shall be stored in memory. Unfortunately the memory map can vary
from system to system, so there is no general rule which addresses
can be used for this.
-->

Dopodiche è necessario caricare le immagini (kernel, ramdisk iniziale
e dtb) in memoria. Per questa operazione occorre usare il comando
tftpboot passando l'indirizzo di memoria al quale deve deve caricata
l'immagine. Sfortunatamente la mappa di memoria varia da sistema a
sistema e non esiste una regola generale su quale indirizzo utilizzare.

</para><para>

<!--
On some systems, U-Boot predefines a set of environment variables
with suitable load addresses: kernel_addr_r, ramdisk_addr_r and
fdt_addr_r. You can check whether they are defined by running
-->

Su alcuni sistemi, U-Boot predefinisce una serie di varibili d'ambiente
con gli indirizzi da usare: kernel_addr_r, ramdisk_addr_r e fdt_addr_r.
È possibile verificare se tali variabili sono state definite con

<informalexample><screen>
printenv kernel_addr_r ramdisk_addr_r fdt_addr_r
</screen></informalexample>

<!--
If they are not defined, you have to check your system's
documentation for appropriate values and set them manually.  For
systems based on Allwinner SunXi SOCs (e.g.  the Allwinner A10,
architecture name <quote>sun4i</quote> or the Allwinner A20,
architecture name <quote>sun7i</quote>), you can e.g.  use the
follwing values:
-->

Se non sono state definite, è necessario trovare nella documentazione
i valori adatti al proprio sistema e impostarli manualmente. Per i
sistemi basati sui SOC Allwinner SunXi (per esempio per Allwinner A10
nome dell'architettura <quote>sun4i</quote>, o Allwinner A20, nome
dell'architettura <quote>sun7i</quote>) è possibile usare i seguenti
valori:

<informalexample><screen>
setenv kernel_addr_r 0x46000000
setenv fdt_addr_r 0x47000000
setenv ramdisk_addr_r 0x48000000
</screen></informalexample>

</para><para>

<!--
When the load addresses are defined, you can load the images
into memory from the previously defined tftp server with
-->

Dopo aver impostato gli indirizzi, è possibile caricare le immagini
in memoria dal server tftp definito in precedenza con

<informalexample><screen>
tftpboot ${kernel_addr_r} <!-- &lt;filename of the kernel image&gt; -->&lt;nome file dell'immagine del kernel&gt;
tftpboot ${fdt_addr_r} <!-- &lt;filename of the dtb&gt; -->&lt;nome file del dtb&gt;
tftpboot ${ramdisk_addr_r} <!-- &lt;filename of the initial ramdisk image&gt; -->&lt;nome file del ramdisk iniziale&gt;
</screen></informalexample>

</para><para>

<!--
The third part is setting the kernel commandline and actually
executing the loaded code.  U-boot passes the content of the
<quote>bootargs</quote> environment variable as commandline to the
kernel, so any parameters for the kernel and the installer - such as
the console device (see <xref linkend="boot-console"/>) or
preseeding options (see <xref linkend="installer-args"/> and <xref
linkend="appendix-preseed"/>) - can be set with a command like
-->

Il terzo passo è impostare la riga di comando per il kernel e avviare
l'esecuzione del codice appena caricato. U-boot passa il contenuto
della variabile d'ambiente <quote>bootargs</quote> come riga di comando
al kernel, quindi tutti parametri per il kernel e per l'installatore,
come il device della console (vedere <xref linkend="boot-console"/>)
oppure le opzioni di preconfigurazione (vedere <xref
linkend="installer-args"/> e <xref linkend="appendix-preseed"/>), possono
essere impostati con un comando simile a

<informalexample><screen>
setenv bootargs console=ttyS0,115200 rootwait panic=10
</screen></informalexample>

<!--
The exact command to execute the previously loaded code depends on
the image format used.  With uImage/uInitrd, the command is
-->

Il comando per eseguire il codice caricato in precedenza dipende dal
formato delle immagini usato. Con uImage/uInitrd, usare il comando

<informalexample><screen>
bootm ${kernel_addr_r} ${ramdisk_addr_r} ${fdt_addr_r}
</screen></informalexample>

<!--
and with native Linux images it is
-->

e con le immagini native Linux usare

<informalexample><screen>
bootz ${kernel_addr_r} ${ramdisk_addr_r}:${filesize} ${fdt_addr_r}
</screen></informalexample>

</para><para>

<!--
Note: When booting standard linux images, it is important to load
the initial ramdisk image after the kernel and the dtb as U-Boot
sets the filesize variable to the size of the last file loaded and
the bootz command requires the size of the ramdisk image to work
correctly.  In case of booting a platform-specific kernel, i.e.  a
kernel without device-tree, simply omit the ${fdt_addr_r} parameter.
-->

Nota: quando si avviano immagini linux è importante caricare l'immagine
del ramdisk iniziale dopo il kernel e il dtb poiché U-Boot imposta il
valore della variabile filesize pari alla dimensione dell'ultimo file
caricato e il comando bootz ha bisogno di conoscere la dimensione
dell'immagine del ramdisk per funzionare correttamente. Per avviare un
kernel specifico per una piattaforma, vale a dire un kernel senza il
device-tree, è sufficiente omettere il parametro ${fdt_addr_r}.

</para>
   </sect3>

   <sect3 arch="armhf" id="boot-armhf-netboot.tar.gz">
   <!-- <title>Pre-built netboot tarball</title> -->
   <title>Tarball preconfezionato per avvio da rete</title>
<para>

<!--
&debian; provides a pre-built tarball (&armmp-netboot-tarball;)
that can simply be unpacked on your tftp server and contains
all files necessary for netbooting.  It also includes a boot
script that automates all steps to load the installer.  Modern
U-Boot versions contain a tftp autoboot feature that becomes
active if there is no bootable local storage device (MMC/SD,
USB, IDE/SATA/SCSI) and then loads this boot script from the
tftp server.  Prerequisite for using this feature is that you
have a dhcp server in your network which provides the client
with the address of the tftp server.
-->

&debian; fornisce un tarball preconfezionato (&armmp-netboot-tarball;)
da scompattare sul proprio server tftp che contiene tutti i file
necessari per l'avvio da rete. Contiene anche uno script di avvio che
automatizza tutti i passi per caricare l'installatore. Le versioni di
U-Boot recenti dispongono della funzione di avvio automatico tftp, tale
funzione si attiva quando non ci sono altri dispositivi locali (MMC/SD,
USB, IDE/SATA/SCSI) dai quali è possibile fare l'avvio e poi carica lo
script di avvio dal server tftp. Per usare questa funzione è necessario
che nella rete sia presente un server dhcp che fornisce al client
l'indirizzo del server tftp.

</para><para>

<!--
If you would like to trigger the tftp autoboot feature from the
U-Boot commandline, you can use the follwing command:
-->

Per far scattare la funzione di avvio automatico tftp dalla riga di
comando di U-Boot è possibile usare il comando seguente:

<informalexample><screen>run bootcmd_dhcp</screen></informalexample>

</para><para>

<!--
To manually load the bootscript provided by the tarball, you can
alternatively issue the following commands at the U-Boot prompt:
-->

Per caricare manualmente lo script di avvio fornito nel tarball è
possibile anche usare il seguente comando dal prompt di U-Boot:

<informalexample><screen>
setenv autoload no
dhcp
tftpboot ${scriptaddr} /debian-installer/armhf/tftpboot.scr
source ${scriptaddr}
</screen></informalexample>

</para>
   </sect3>
  </sect2>

  <sect2 arch="arm64" condition="bootable-usb" id="usb-boot">
  <!-- <title>Booting from USB Memory Stick with UEFI</title> -->
  <title>Avvio da chiavetta USB con UEFI</title>

&boot-installer-intro-usb.xml;

  </sect2>

  <sect2 arch="armel;armhf" id="boot-hd-media">
  <!-- <title>Booting from a USB stick in U-Boot</title> -->
  <title>Avvio da chiavetta USB in U-Boot</title>
<para>

<!--
Many modern U-Boot versions have USB support and allow booting from
USB mass storage devices such as USB sticks.  Unfortunately the exact
steps required to do that can vary quite a bit from device to device.
-->

Molte delle versioni moderne di U-Boot hanno il supporto per USB e
permettono di fare l'avvio da dispositivi di memorizzazione di massa
USB come le chiavette USB. Sfortunatamente i passi esatti per fare
l'avvio variano leggermente da dispositivo a dispositivo.

</para><para>

<!--
U-Boot v2014.10 has introduced a common commandline handling and
autoboot framework.  This allows building generic boot images that
work on any system implementing this framework.  The &d-i; supports
installation from a USB stick on such systems, but unfortunately not
all platforms have adopted this new framework yet.
-->

In U-Boot v2014.10 sono stati introdotti una gestione comune della riga
di comando e l'infrastruttura autoboot. Ciò permette di creare immagini
d'avvio generiche che funzionano su qualsiasi sistema con tale framework.
Il &d-i; può fare l'installazione a partire da una chiavetta USB su tali
sistemi, purtroppo non tutte le piattaforme hanno già adottato questa
nuova infrastruttura.

</para><para>

<!--
To build a bootable USB stick for installing &debian;, unpack the
hd-media tarball (see <xref linkend="where-files"/>) onto a
USB stick formatted with a filesystem supported by the U-Boot version
on your device.  For modern U-Boot versions, any of FAT16 / FAT32 /
ext2 / ext3 / ext4 usually works. Then copy the ISO image file of the
first &debian; installation CD or DVD onto the stick.
-->

Per creare una chiavetta USB con la quale installare &debian; occorre
prima scompattare l'archivio tar hd-media (consultare <xref
linkend="where-files"/>) su una chiavetta USB formattata con uno dei
filesystem supportati dalla versione di U-Boot del proprio dispositivo
(le versioni più recenti di U-Boot suportano FAT16 / FAT32 / ext2 /
ext3 / ext4), poi copiare il file dell'immagine ISO del primo CD o DVD
d'installazione &debian; sulla chiavetta.

</para><para>

<!--
The autoboot framework in modern U-Boot versions works similar to the
boot ordering options in a PC BIOS, i.e.  it checks a list of possible
boot devices for a valid boot image and starts the first one it finds.
If there is no operating system installed, plugging in the USB stick
and powering up the system should result in starting the installer.
You can also initiate the USB-boot process any time from the U-Boot
prompt by entering the <quote>run bootcmd_usb0</quote> command.
-->

L'infrastruttura autoboot delle recenti versioni di U-Boot funziona in
modo similare alla opzione sull'ordine di avvio del BIOS dei PC, cioè
ricerca nell'elenco dei dispositivi da cui è possibile fare l'avvio il
primo che contiene un'immagine avviabile e la fa partire. Se non è
installato alcun sistema operativo, inserendo una chiavetta USB e
l'accensione del sistema dovrebbe comportare l'avvio dell'installatore.
È anche possibile iniziare il processo d'avvio da USB in qualsiasi
momento inserendo dal prompt di U-Boot il comando
<quote>run bootcmd_usb0</quote>.

</para><para>

<!--
One problem that can come up when booting from a USB stick while using
a serial console can be a console baudrate mismatch.  If a console
variable is defined in U-Boot, the &d-i; boot script automatically
passes it to the kernel to set the primary console device and, if
applicable, the console baudrate.  Unfortunately the handling of the
console variable varies from platform to platform - on some platforms,
the console variable includes the baudrate (as in
<quote>console=ttyS0,115200</quote>), while on other platforms the
console variable contains only the device (as in
<quote>console=ttyS0</quote>).  The latter case leads to a garbled
console output when the default baudrate differs between U-Boot and
the kernel.  Modern U-Boot versions often use 115200 baud while the
kernel still defaults to the traditional 9600 baud. If this happens,
you should manually set the console variable to contain the correct
baudrate for your system and then start the installer with the
<quote>run bootcmd_usb0</quote> command.
-->

Un problema che può verificarsi durante l'avvio da una chiavetta USB
quando è collegata una console seriale è un disallineamento della
velocità di comunicazione. Se in U-Boot è definita la varibile console,
lo script di avvio del &d-i; ne passa automaticamente il valore al
kernel in modo da impostare il device della console primaria e, se
possibile, la velocità di trasmissione. Sfortunatamente la gestione
della variabile console varia da piattaforma a piattaforma: su alcune
la varibile contiene anche la velocità (come in
<quote>console=ttyS0,115200</quote>), invece su altre la varibile
contiene solo il device (come in <quote>console=ttyS0</quote>). In
quest'ultimo caso è possibile avere dell'output confuso sulla console
qual ora la velocità predefinita di U-Boot sia diversa da quella del
kernel. Le versioni recenti di U-Boot spesso utilizzano 115200 baud
mentre il kernel tutt'ora utilizza i tradizionali 9600 baud. In questo
caso è necessario impostare manualmente la varibile console in modo che
contenga anche la velocità di trasmissione adatta al sistema e avviare
l'installatore con il comando <quote>run bootcmd_usb0</quote>.

</para>
  </sect2>

  <sect2 arch="armhf" id="boot-installer-sd-image">
  <!-- <title>Using pre-built SD-card images with the installer</title> -->
  <title>Uso di immagini per schede SD precompilate con l'installatore</title>
<para>

<!--
For a number of systems, Debian provides SD card images that contain
both U-Boot and the &d-i;.  These images are provided in two variants
- one for downloading the software packages over the network
(available at &armmp-netboot-sd-img;) and one for offline
installations using a Debian CD/DVD (available at
&armmp-hd-media-sd-img;).  To save space and network bandwidth, the
images consist of two parts - a system-dependent part named
<quote>firmware.&lt;system-type&gt;.img.gz</quote>, and a
system-independent part named <quote>partition.img.gz</quote>.
-->

Per un certo numero di sistemi Debian fornisce delle immagini di
schede SD contenenti U-Boot e &d-i;. Tali immagini sono create in due
varianti, una che scarica i pacchetti software dalla rete (disponibile
da &armmp-netboot-sd-img;) e l'altra chiamata hd-media per le
installazioni senza un collegamento di rete e ha bisogno di un CD/DVD
Debian (disponibile da &armmp-hd-media-sd-img;). Per risparmiare spazio
e traffico di rete le immagini consistono di due parti: la prima parte
dipende dal sistema è chiamata
<quote>firmware.&lt;tipo-sistema&gt;.img.gz</quote>, la seconda parte
indipendente dal sistema è chiamata <quote>partition.img.gz</quote>.

</para><para>

<!--
To create a complete image from the two parts on Linux systems, you
can use zcat as follows:
-->

Su sistemi Linux per unire le due parti e creare un'immagine completa
è possibile usare zcat in questo modo:

<!--
<informalexample><screen>zcat firmware.&lt;system-type&gt;.img.gz partition.img.gz > complete_image.img</screen></informalexample>
-->

<informalexample><screen>zcat firmware.&lt;tipo-sistema&gt;.img.gz partition.img.gz > immagine_completa.img</screen></informalexample>

<!--
On Windows systems, you have to first decompress the two parts
separately, which can be done e.g.  by using 7-Zip, and then
concatenate the decompressed parts together by running the command
-->

Su sistemi windows è necessario prima decomprimere ciascuna delle due
parti, ciò può essere fatto usando per esempio 7-Zip e poi unire assieme
le due parti eseguendo il comando

<!--
<informalexample><screen>copy /b firmware.&lt;system-type&gt;.img + partition.img complete_image.img</screen></informalexample>
-->

<informalexample><screen>copy /b firmware.&lt;tipo-sistema&gt;.img + partition.img immagine_completa.img</screen></informalexample>

<!--
in a Windows CMD.exe window.
-->

da una finestra con il prompt dei comandi di Windows.

</para><para>

<!--
Write the resulting image onto an SD card, e.g. by running the
following command on a Linux system:
-->

Scrivere l'immagine risultante su una scheda SD, su un sistema Linux
con il seguente comando:

<!--
<informalexample><screen>cat complete_image.img > /dev/SD_CARD_DEVICE</screen></informalexample>
-->

<informalexample><screen>cat immagine_completa.img > /dev/DEVICE_SCHEDA_SD</screen></informalexample>

<!--
After plugging the SD card into the target system and powering the
system up, the installer is loaded from the SD card.  If you use the
hd-media variant for offline installations, you must provide the
installer with access to the first &debian; CD/DVD on a separate
medium, which can e.g. be a CD/DVD ISO image on a USB stick.
-->

Inserire la scheda SD nel sistema e poi accenderlo, l'installatore
verrà caricato dalla scheda SD. Con la variante hd-media per le
installazioni senza un collegamento alla rete è necessario fornire
all'installatore l'accesso al primo CD/DVD &debian; su un altro
supporto che, per esempio, può essere l'immagine ISO del CD/DVD
su una chiavetta USB.

</para><para>

<!--
When you come to the partitioning step in the installer (see <xref
linkend="di-partition"/>), you can delete or replace any previous
partitions on the card.  Once the installer is started, it runs
completely in the system's main memory and does not need to access the
SD card anymore, so you can use the full card for installing &debian;. 
The easiest way to create a proper partition layout on the SD card is
to let the installer automatically create one for you (see
<xref linkend="partman-auto"/>).
-->

Usando l'installatore, durante il passo relativo al partizionamento
(vedere <xref linkend="di-partition"/>), è possibile cancellare o
sostituire qualsiasi partizione presente sulla scheda. Infatti, una
volta avviato, l'installatore viene completamente caricato in memoria
e non ha più bisogno di accedere alla scheda SD quindi è possibile
scegliere di installare &debian; sulla stessa scheda. Il modo più
semplice per partizionare al meglio la scheda SD è lasciare che sia
l'installatore a creare automaticamente le partizioni (vedere <xref
linkend="partman-auto"/>).

</para>
  </sect2>

<!-- # None of the arm systems supported in Jessie is able to boot from
     # CD/DVD -> commenting out the "Booting from CD-ROM section" for arm

  <sect2 arch="arm">
  <title>Booting from CD-ROM</title>
  <title>Avvio da CD-ROM</title>

&boot-installer-intro-cd.xml;

  </sect2>
-->

<!--
  <sect2 arch="arm" id="boot-firmware">
  <title>Booting from Firmware</title>
  <title>Avvio da firmware</title>

&boot-installer-intro-firmware.xml;

   <sect3 arch="arm" id="boot-firmware-ss4000e">
   <title>Booting the SS4000-E</title>
   <title>Avvio di SS4000-E</title>
<para>

Due to limitations in the SS4000-E firmware, it unfortunately is not
possible to boot the installer without the use of a serial port at
this time. To boot the installer, you will need a serial nullmodem
cable; a computer with a serial port<footnote id="arm-s4ke-port">

Sfortunatamente, a causa delle limitazioni nel firmware del SS4000-E,
non è possibile avviare l'installatore senza usare una porta seriale.
Per far partire l'installatore è necessario usare un cavo nullmodem,
un computer con una porta seriale<footnote id="arm-s4ke-port">

<para>

A USB serial converter will also work.

Va bene anche un adattatore USB seriale.

</para>

</footnote>; and a ribbon cable with a male DB9 connector at one end,
and a 10-pin .1" IDC header at the other<footnote id="arm-s4k-rib">

</footnote> e un cavo piatto con un connettore maschio DB9 da una parte
e un connettore IDC passo 2,54&nbsp;mm con 10 poli
dall'altra<footnote id="arm-s4k-rib">

<para>

This cable is often found in older desktop machines with builtin 9-pin
serial ports.

È possibile trovare questo cavo nelle vecchie macchine desktop che hanno
porte seriali con 9 poli.

</para>

</footnote>.

</para><para>

To boot the SS4000-E, use your serial nullmodem cable and the ribbon
cable to connect to the serial port of the SS4000-E, and reboot the
machine. You need to use a serial terminal application to communicate
with the machine; a good option on a &debian; GNU/Linux is to use the
<command>cu</command> program, in the package of the same name. Assuming
the serial port on your computer is to be found on
<filename>/dev/ttyS0</filename>, use the following command line:

Per avviare il SS4000-E, collegarsi alla porta seriale del SS4000-E
usando il cavo nullmodem e il cavo piatto poi riavviare la macchina.
È necessaria un'applicazione di emulazione del terminale per
comunicare con la macchina; su &debian; GNU/Linux si può usare il programma
<command>cu</command>, contenuto nell'omonimo pacchetto. Supponendo che
la porta seriale sul proprio computer sia <filename>/dev/ttyS0</filename>,
utilizzare la seguente riga di comando:

</para>

<informalexample><screen>
cu -lttyS0 -s115200
</screen></informalexample>

<para>

If using Windows, you may want to consider using the program
<classname>hyperterminal</classname>. Use a baud rate of 115200,
8 bits word length, no stop bits, and one parity bit.

Se si usa Windows, è possibile utilizzare il programma
<classname>hyperterminal</classname>. Usare 115200 bit per secondo,
8 bit di dati, nessun bit di stop e 1 bit di parità.

</para><para>

When the machine boots, you will see the following line of output:

Mentre la macchina si avvia, saranno visibili le seguenti righe:

</para>

<informalexample><screen>
No network interfaces found

EM-7210 ver.T04 2005-12-12 (For ver.AA)
== Executing boot script in 1.000 seconds - enter ^C to abort
</screen></informalexample>

<para>

At this point, hit Control-C to interrupt the boot
loader<footnote id="arm-s4ke-sec">

Adesso premere Control-C per arrestare l'avvio<footnote id="arm-s4ke-sec">

<para>

Note that you have only one second to do so; if you miss this window,
just powercycle the machine and try again.

Notare che si ha solo un secondo per farlo; se non si fa in tempo,
riavviare la macchina e riprovare.

</para>

</footnote>. This will give you the RedBoot prompt. Enter the
following commands:

</footnote>. In questo modo si accede al prompt di RedBoot, inserire
questi comandi:

<informalexample><screen>
load -v -r -b 0x01800000 -m ymodem ramdisk.gz
load -v -r -b 0x01008000 -m ymodem zImage
exec -c "console=ttyS0,115200 rw root=/dev/ram mem=256M@0xa0000000" -r 0x01800000
</screen></informalexample>

</para><para>

After every <command>load</command> command, the system will expect a
file to be transmitted using the YMODEM protocol. When using cu, make
sure you have the package <classname>lrzsz</classname> installed, then
hit enter, followed by the <quote>~&lt;</quote> escape sequence to start
an external program, and run <command>sb initrd.gz</command> or
<command>sb vmlinuz</command>.

Dopo ogni comando <command>load</command> il sistema si aspetta che sia
trasmesso un file usando il protocollo YMODEM. Con cu, assicurarsi che
il pacchetto <classname>lrzsz</classname> sia installato, poi premere
Invio, seguito dalla sequenza di escape <quote>~&lt;</quote> per avviare
un programma esterno ed eseguire <command>sb initrd.gz</command> o
<command>sb vmlinuz</command>.

</para><para>

Alternatively, it is possible to load the kernel and ramdisk using
HTTP rather than YMODEM. This is faster, but requires a working HTTP
server on the network. To do so, first switch the bootloader to RAM mode:

In alternativa è possibile caricare il kernel e il ramdisk usando HTTP
anziché YMODEM. Questo metodo è più veloce ma richiede un server HTTP
funzionante in rete. Mettere mettere in modalità RAM il bootloader:

<informalexample><screen>
fis load rammode
g
</screen></informalexample>

</para><para>

This will seemingly restart the machine; but in reality, it loads
redboot to RAM and restarts it from there. Not doing this step will cause
the system to hang in the necessary ip_address step that comes next.

In apparenza questo comando riavvia la macchina; in realtà carica redboot
in RAM e riavvia da lì. Saltando questo passo il sistema si bloccherà su
ip_address, uno dei passi successivi.

</para><para>

You will need to hit Ctrl-C again to interrupt the boot. Then:

È necessario premere di nuovo Ctrl-C per interrompere l'avvio. Poi:

<informalexample><screen>
ip_address -l <replaceable>192.168.2.249</replaceable> -h <replaceable>192.168.2.4</replaceable>
load -v -r -b 0x01800000 -m http /initrd.gz
load -v -r -b 0x01008000 -m http /zImage
exec -c "console=ttyS0,115200 rw root=/dev/ram mem=256M@0xa0000000" -r 0x01800000
</screen></informalexample>

Where <replaceable>192.168.2.249</replaceable> is the IP address of the
installed system and <replaceable>192.168.2.4</replaceable> the IP address
of the HTTP server containing the kernel and ramdisk files.

Dove <replaceable>192.168.2.249</replaceable> è l'indirizzo IP del sistema
che si sta installando e <replaceable>192.168.2.4</replaceable> è l'indirizzo
IP del server HTTP che contiene i file del kernel e del ramdisk.

</para><para>

The installer will now start as usual.

Adesso l'Installatore partirà come al solito.

</para>
   </sect3>
  </sect2>
-->
